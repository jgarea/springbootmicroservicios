services:
  postgresdb:
    image: postgres:latest
    container_name: postgresdb
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: springbootmicroservicios
    ports:
      - "5432:5432"
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    networks:
      - microservices-network

  eureka:
    build: ./eureka
    container_name: eureka
    ports:
      - "8099:8099"
    expose:
      - 8099
    networks:
      - microservices-network

  config-server:
    build: ./config-server
    container_name: config-server
    ports:
      - "8098:8098"
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka:8099/eureka
    expose:
      - 8098
    depends_on:
      - eureka
    networks:
      - microservices-network

  gateway:
    build: ./gateway
    container_name: gateway
    ports:
      - "8080:8080"
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka:8099/eureka
      SPRING_CLOUD_CONFIG_URI: http://config-server:8098
      AUTH_VALIDATION_URL: http://auth-service:8085/auth/validateToken
    expose:
      - 8080
    depends_on:
      - eureka
      - config-server
    networks:
      - microservices-network
    restart: always

  auth-service:
    build: ./auth-service
    container_name: auth-service
    ports:
      - "8085:8085"
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka:8099/eureka
      SPRING_CLOUD_CONFIG_URI: http://config-server:8098
      DATABASE_URL: jdbc:postgresql://postgresdb:5432/springbootmicroservicios
    expose:
      - 8085
    depends_on:
      - eureka
      - config-server
    networks:
      - microservices-network
    restart: always

  saludo:
    build: ./saludo
    container_name: saludo
    ports:
      - "8701:8701"
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka:8099/eureka
      SPRING_CLOUD_CONFIG_URI: http://config-server:8098
    expose:
      - 8701
    depends_on:
      - eureka
      - config-server
    networks:
      - microservices-network
    restart: always

  # pgadmin:
  #   image: dpage/pgadmin4
  #   container_name: pgadmin
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: admin@admin.com
  #     PGADMIN_DEFAULT_PASSWORD: admin
  #   ports:
  #     - "8081:80"
  #   depends_on:
  #     - postgresdb
  #   networks:
  #     - microservices-network


networks:
  microservices-network:
    driver: bridge